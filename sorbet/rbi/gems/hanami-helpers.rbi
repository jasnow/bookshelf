# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/hanami-helpers/all/hanami-helpers.rbi
#
# hanami-helpers-1.3.1
module Hanami
end
module Hanami::Helpers
  def self.included(base); end
end
module Hanami::Helpers::HtmlHelper
  def html(&blk); end
end
class Hanami::Helpers::HtmlHelper::EmptyHtmlNode
  def attribute(attribute_name, value); end
  def attributes; end
  def boolean_attribute(attribute_name, _value); end
  def boolean_attribute?(attribute_name); end
  def initialize(name, attributes); end
  def prepare_html_attributes(attributes); end
  def to_s; end
end
class Hanami::Helpers::HtmlHelper::HtmlNode < Hanami::Helpers::HtmlHelper::EmptyHtmlNode
  def content; end
  def initialize(name, content, attributes, _options = nil); end
  def to_s; end
end
class Hanami::Helpers::HtmlHelper::HtmlFragment
  def content; end
  def initialize(&blk); end
  def to_s; end
end
class Hanami::Helpers::HtmlHelper::TextNode
  def initialize(content); end
  def to_s; end
end
class Hanami::Helpers::HtmlHelper::HtmlBuilder
  def +(content); end
  def a(content = nil, attributes = nil, &blk); end
  def abbr(content = nil, attributes = nil, &blk); end
  def address(content = nil, attributes = nil, &blk); end
  def area(attributes = nil); end
  def article(content = nil, attributes = nil, &blk); end
  def aside(content = nil, attributes = nil, &blk); end
  def audio(content = nil, attributes = nil, &blk); end
  def b(content = nil, attributes = nil, &blk); end
  def base(attributes = nil); end
  def bdi(content = nil, attributes = nil, &blk); end
  def bdo(content = nil, attributes = nil, &blk); end
  def blockquote(content = nil, attributes = nil, &blk); end
  def body(content = nil, attributes = nil, &blk); end
  def br(attributes = nil); end
  def button(content = nil, attributes = nil, &blk); end
  def canvas(content = nil, attributes = nil, &blk); end
  def caption(content = nil, attributes = nil, &blk); end
  def cite(content = nil, attributes = nil, &blk); end
  def code(content = nil, attributes = nil, &blk); end
  def col(attributes = nil); end
  def colgroup(content = nil, attributes = nil, &blk); end
  def data(content = nil, attributes = nil, &blk); end
  def datalist(content = nil, attributes = nil, &blk); end
  def dd(content = nil, attributes = nil, &blk); end
  def del(content = nil, attributes = nil, &blk); end
  def details(content = nil, attributes = nil, &blk); end
  def dfn(content = nil, attributes = nil, &blk); end
  def dialog(content = nil, attributes = nil, &blk); end
  def div(content = nil, attributes = nil, &blk); end
  def dl(content = nil, attributes = nil, &blk); end
  def dt(content = nil, attributes = nil, &blk); end
  def em(content = nil, attributes = nil, &blk); end
  def embed(attributes = nil); end
  def empty_tag(name, attributes = nil); end
  def encode(encoding); end
  def fieldset(content = nil, attributes = nil, &blk); end
  def figcaption(content = nil, attributes = nil, &blk); end
  def figure(content = nil, attributes = nil, &blk); end
  def footer(content = nil, attributes = nil, &blk); end
  def form(content = nil, attributes = nil, &blk); end
  def fragment(&blk); end
  def h1(content = nil, attributes = nil, &blk); end
  def h2(content = nil, attributes = nil, &blk); end
  def h3(content = nil, attributes = nil, &blk); end
  def h4(content = nil, attributes = nil, &blk); end
  def h5(content = nil, attributes = nil, &blk); end
  def h6(content = nil, attributes = nil, &blk); end
  def head(content = nil, attributes = nil, &blk); end
  def header(content = nil, attributes = nil, &blk); end
  def hgroup(content = nil, attributes = nil, &blk); end
  def hr(attributes = nil); end
  def i(content = nil, attributes = nil, &blk); end
  def iframe(content = nil, attributes = nil, &blk); end
  def img(attributes = nil); end
  def initialize; end
  def input(attributes = nil); end
  def ins(content = nil, attributes = nil, &blk); end
  def kbd(content = nil, attributes = nil, &blk); end
  def keygen(attributes = nil); end
  def label(content = nil, attributes = nil, &blk); end
  def legend(content = nil, attributes = nil, &blk); end
  def li(content = nil, attributes = nil, &blk); end
  def link(attributes = nil); end
  def main(content = nil, attributes = nil, &blk); end
  def map(content = nil, attributes = nil, &blk); end
  def mark(content = nil, attributes = nil, &blk); end
  def math(content = nil, attributes = nil, &blk); end
  def menu(content = nil, attributes = nil, &blk); end
  def menuitem(attributes = nil); end
  def meta(attributes = nil); end
  def meter(content = nil, attributes = nil, &blk); end
  def method_missing(method_name, *args, &blk); end
  def nav(content = nil, attributes = nil, &blk); end
  def nested?; end
  def noscript(content = nil, attributes = nil, &blk); end
  def object(content = nil, attributes = nil, &blk); end
  def ol(content = nil, attributes = nil, &blk); end
  def optgroup(content = nil, attributes = nil, &blk); end
  def option(content = nil, attributes = nil, &blk); end
  def options; end
  def output(content = nil, attributes = nil, &blk); end
  def p(content = nil, attributes = nil, &blk); end
  def param(attributes = nil); end
  def pre(content = nil, attributes = nil, &blk); end
  def progress(content = nil, attributes = nil, &blk); end
  def q(content = nil, attributes = nil, &blk); end
  def resolve(&blk); end
  def respond_to_missing?(method_name, include_all); end
  def rp(content = nil, attributes = nil, &blk); end
  def rt(content = nil, attributes = nil, &blk); end
  def rtc(content = nil, attributes = nil, &blk); end
  def ruby(content = nil, attributes = nil, &blk); end
  def s(content = nil, attributes = nil, &blk); end
  def samp(content = nil, attributes = nil, &blk); end
  def script(content = nil, attributes = nil, &blk); end
  def section(content = nil, attributes = nil, &blk); end
  def select(content = nil, attributes = nil, &blk); end
  def self.html_node; end
  def self.html_node=(arg0); end
  def slot(content = nil, attributes = nil, &blk); end
  def small(content = nil, attributes = nil, &blk); end
  def source(attributes = nil); end
  def span(content = nil, attributes = nil, &blk); end
  def strong(content = nil, attributes = nil, &blk); end
  def style(content = nil, attributes = nil, &blk); end
  def sub(content = nil, attributes = nil, &blk); end
  def summary(content = nil, attributes = nil, &blk); end
  def sup(content = nil, attributes = nil, &blk); end
  def svg(content = nil, attributes = nil, &blk); end
  def table(content = nil, attributes = nil, &blk); end
  def tag(name, content = nil, attributes = nil, &blk); end
  def tbody(content = nil, attributes = nil, &blk); end
  def td(content = nil, attributes = nil, &blk); end
  def template(content = nil, attributes = nil, &blk); end
  def text(content); end
  def textarea(content = nil, attributes = nil, &blk); end
  def tfoot(content = nil, attributes = nil, &blk); end
  def th(content = nil, attributes = nil, &blk); end
  def thead(content = nil, attributes = nil, &blk); end
  def time(content = nil, attributes = nil, &blk); end
  def title(content = nil, attributes = nil, &blk); end
  def to_s; end
  def tr(content = nil, attributes = nil, &blk); end
  def track(attributes = nil); end
  def u(content = nil, attributes = nil, &blk); end
  def ul(content = nil, attributes = nil, &blk); end
  def var(content = nil, attributes = nil, &blk); end
  def video(content = nil, attributes = nil, &blk); end
  def wbr(attributes = nil); end
  extend Hanami::Utils::ClassAttribute::ClassMethods
  include Hanami::Utils::ClassAttribute
end
module Hanami::Helpers::EscapeHelper
  def escape_html(input); end
  def escape_html_attribute(input); end
  def escape_url(input, schemes = nil); end
  def h(input); end
  def ha(input); end
  def hu(input, schemes = nil); end
  def raw(input); end
end
module Hanami::Helpers::RoutingHelper
  def self.included(base); end
end
module Hanami::Helpers::LinkToHelper
  def link_to(content, url = nil, options = nil, &blk); end
  include Hanami::Helpers::HtmlHelper
end
module Hanami::Helpers::FormHelper
  def csrf_meta_tags; end
  def csrf_token; end
  def form_for(name, url = nil, options = nil, &blk); end
  include Hanami::Helpers::HtmlHelper
end
class Hanami::Helpers::FormHelper::HtmlNode < Hanami::Helpers::HtmlHelper::HtmlNode
  def _csrf_protection!; end
  def _method_override!; end
  def content; end
  def initialize(name, content, attributes, options); end
end
class Hanami::Helpers::FormHelper::Values
  def _dig(base, key); end
  def _get_from_params(*keys); end
  def _get_from_values(*keys); end
  def get(*keys); end
  def initialize(values, params); end
end
class Hanami::Helpers::FormHelper::FormBuilder < Hanami::Helpers::HtmlHelper::HtmlBuilder
  def _attributes(type, name, attributes); end
  def _attributes_for_check_box(name, attributes); end
  def _check_box_checked?(value, input_value); end
  def _displayed_input_name(name); end
  def _for(content, name); end
  def _hidden_field_for_check_box(name, attributes); end
  def _input_id(name); end
  def _input_name(name); end
  def _is_current_value?(input_value, value); end
  def _is_in_input_values?(multiple, input_value, value); end
  def _is_in_selected_values?(multiple, selected, value); end
  def _method_override!; end
  def _select_input_name(name, multiple); end
  def _select_option_selected?(value, selected, input_value, multiple); end
  def _value(name); end
  def button(content, attributes = nil, &blk); end
  def check_box(name, attributes = nil); end
  def color_field(name, attributes = nil); end
  def csrf_token; end
  def datalist(name, values, list, attributes = nil); end
  def date_field(name, attributes = nil); end
  def datetime_field(name, attributes = nil); end
  def datetime_local_field(name, attributes = nil); end
  def email_field(name, attributes = nil); end
  def fields_for(name, value = nil); end
  def fields_for_collection(name, &block); end
  def fieldset(content = nil, attributes = nil); end
  def file_field(name, attributes = nil); end
  def hidden_field(name, attributes = nil); end
  def image_button(source, attributes = nil); end
  def initialize(form, attributes, context = nil, &blk); end
  def input_text(name, attributes = nil); end
  def label(content, attributes = nil); end
  def month_field(name, attributes = nil); end
  def number_field(name, attributes = nil); end
  def options; end
  def password_field(name, attributes = nil); end
  def radio_button(name, value, attributes = nil); end
  def range_field(name, attributes = nil); end
  def search_field(name, attributes = nil); end
  def select(name, values, attributes = nil); end
  def self.html_node; end
  def self.html_node=(arg0); end
  def submit(content, attributes = nil, &blk); end
  def tel_field(name, attributes = nil); end
  def text_area(name, content = nil, attributes = nil); end
  def text_field(name, attributes = nil); end
  def time_field(name, attributes = nil); end
  def to_s; end
  def toplevel?; end
  def url_field(name, attributes = nil); end
  def verb_method; end
  def week_field(name, attributes = nil); end
  include Hanami::Helpers::EscapeHelper
end
class Hanami::Helpers::FormHelper::Form
  def initialize(name, url, values = nil, attributes = nil); end
  def name; end
  def url; end
  def values; end
  def verb; end
end
module Hanami::Helpers::NumberFormattingHelper
  def format_number(number, options = nil); end
end
class Hanami::Helpers::NumberFormattingHelper::Formatter
  def delimitate(part); end
  def format; end
  def initialize(number, options); end
  def parts; end
  def precision; end
  def precision_requested_explicitly?; end
  def rounded_number; end
  def to_number; end
  def to_str; end
end

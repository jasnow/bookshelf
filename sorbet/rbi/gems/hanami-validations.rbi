# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/hanami-validations/all/hanami-validations.rbi
#
# hanami-validations-1.3.4
module Hanami
end
module Hanami::Validations
  def initialize(input = nil); end
  def self.included(base); end
  def to_h; end
  def validate; end
end
class Hanami::Validations::Namespace
  def initialize(name); end
  def name_without_suffix; end
  def self.new(name, klass); end
  def to_s; end
  def underscored_name; end
end
module Hanami::Validations::Predicates
  def self.included(base); end
end
class Hanami::Validations::InlinePredicate
  def ==(other); end
  def initialize(name, message, &blk); end
  def message; end
  def name; end
  def to_proc; end
end
module Hanami::Validations::ClassMethods
  def __messages; end
  def __predicates; end
  def _base_rules; end
  def _build(options = nil, &blk); end
  def _schema_config; end
  def _schema_predicates; end
  def _schema_type; end
  def messages(type); end
  def messages_path(path); end
  def namespace(name = nil); end
  def predicate(name, message: nil, &blk); end
  def predicates(mod); end
  def validations(&blk); end
end
module Hanami::Validations::Form
  def self.included(base); end
end
module Hanami::Validations::Form::ClassMethods
  def _schema_type; end
end
